// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may not
// use this file except in compliance with the License. A copy of the
// License is located at
//
// http://aws.amazon.com/apache2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"

// IPackageArchive is an autogenerated mock type for the IPackageArchive type
type IPackageArchive struct {
	mock.Mock
}

// DownloadArchiveInfo provides a mock function with given fields: packageName, version
func (_m *IPackageArchive) DownloadArchiveInfo(packageName string, version string) (string, error) {
	ret := _m.Called(packageName, version)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(packageName, version)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(packageName, version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetResourceVersion provides a mock function with given fields: packageName, version
func (_m *IPackageArchive) GetResourceVersion(packageName string, version string) (string, string) {
	ret := _m.Called(packageName, version)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(packageName, version)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(string, string) string); ok {
		r1 = rf(packageName, version)
	} else {
		r1 = ret.Get(1).(string)
	}

	return r0, r1
}
